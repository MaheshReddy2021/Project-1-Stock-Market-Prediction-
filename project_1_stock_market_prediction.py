# -*- coding: utf-8 -*-
"""Project 1: Stock Market Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k5DpMRfKgi5lSGFqnIZp1qUMs61RTPFR
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

data_set = pd.read_csv("/content/infolimpioavanzadoTarget.csv")

"""Understanding the data"""

data_set.head()

data_set.tail()

data_set.shape

data_set.info()

data_set.describe()

data_set.columns

data_set.isnull().sum()

"""Visualizing key statistics and trends in stock prices."""

sns.relplot(x = "open",y = "close",data = data_set)

sns.relplot(x = "low",y = "high",data = data_set)

sns.histplot(data_set["open"],bins = 50)

sns.histplot(data_set["close"],bins = 50)

sns.histplot(data_set["high"],bins = 50)

sns.histplot(data_set["low"],bins = 50)

X = data_set[["open","high","low","volume"]]
Y = data_set['close']

print(X)

print(Y)

"""Splitting into Training data and Test Data"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=2)

"""Model Training: Random Forest Regressor"""

regressor = LinearRegression()

# training the model
regressor.fit(X_train,Y_train)

"""
Model Evaluation"""

# prediction on Test Data
test_data_prediction = regressor.predict(X_test)

print(test_data_prediction)

# R squared error
error_score = metrics.r2_score(Y_test, test_data_prediction)
print("R squared error : ", error_score)

"""Compare the Actual Values and Predicted Values in a Plot"""

Y_test = list(Y_test)

plt.plot(Y_test, color='blue', label = 'Actual Value')
plt.plot(test_data_prediction, color='red', label='Predicted Value')
plt.title('Actual Price vs Predicted Price')
plt.xlabel('Number of values')
plt.ylabel('GLD Price')
plt.legend()
plt.show()

